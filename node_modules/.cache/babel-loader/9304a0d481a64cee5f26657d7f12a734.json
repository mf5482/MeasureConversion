{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = ['Volume', 'Length', 'Weight'];\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce'];\nconst volumeConver = {\n  'Gallon': 1,\n  'Liter': 3.78541,\n  'Quart': 4,\n  'Pint': 8,\n  'Cup': 16,\n  'Milliliter': 3785.41,\n  'Fluid Ounce': 128\n};\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters'];\nconst lengthConver = [1, 1.60934, 1760, 1609.34, 5280, 63360, 160934];\nconst weight = ['Pounds', 'Kilograms', 'Milligrams', 'Ounces', 'Tons'];\nconst weightConver = [1, 0.453592, 453592, 16, 0.0005];\n\nconst MainBox = () => {\n  _s();\n\n  const [currentUnit, setCurrentUnit] = useState();\n  const [currentList, setCurrentList] = useState(volume);\n  const [currentTo, setCurrentTo] = useState(volume[0]);\n  const [currentFrom, setCurrentFrom] = useState(volume[0]);\n  const [init, setInit] = useState();\n  const [result, setResult] = useState();\n\n  const onUnitChange = e => {\n    setCurrentUnit(e.target.value);\n  }; //Unit change effect\n\n\n  useEffect(() => {\n    console.log(currentUnit);\n\n    if (currentUnit === 'Volume') {\n      setCurrentList(volume);\n      setCurrentFrom(volume[0]);\n      setCurrentTo(volume[0]);\n    } else if (currentUnit === 'Length') {\n      setCurrentList(length);\n      setCurrentFrom(length[0]);\n      setCurrentTo(length[0]);\n    } else if (currentUnit === 'Weight') {\n      setCurrentList(weight);\n      setCurrentFrom(weight[0]);\n      setCurrentTo(weight[0]);\n    }\n  }, [currentUnit]);\n\n  const onFromChange = e => {\n    setCurrentFrom(e.target.value);\n  };\n\n  const onToChange = e => {\n    setCurrentTo(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(currentFrom);\n    console.log(currentTo);\n    console.log(volumeConver[To]);\n  }, [currentFrom, currentTo]);\n\n  const onInitChange = e => {\n    setInit(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(init);\n  }, [init]);\n\n  const onSubmit = async () => {};\n\n  useEffect(() => {\n    console.log(result);\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBox\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"unit\",\n      list: units,\n      onChange: onUnitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      selected: currentFrom,\n      list: currentList,\n      onChange: onFromChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      selected: currentTo,\n      list: currentList,\n      onChange: onToChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: onInitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submit\",\n      onClick: onSubmit,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainBox, \"/36ACzqOXhVpGOefM5xkixJT0sE=\");\n\n_c = MainBox;\nexport default MainBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBox\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js"],"names":["React","Dropdown","useState","useEffect","units","volume","volumeConver","length","lengthConver","weight","weightConver","MainBox","currentUnit","setCurrentUnit","currentList","setCurrentList","currentTo","setCurrentTo","currentFrom","setCurrentFrom","init","setInit","result","setResult","onUnitChange","e","target","value","console","log","onFromChange","onToChange","To","onInitChange","onSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Dropdown from './Dropdown'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\n\nconst units = ['Volume', 'Length', 'Weight']\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce']\nconst volumeConver = {'Gallon':1, 'Liter':3.78541, 'Quart':4, 'Pint':8, 'Cup':16, 'Milliliter':3785.41, 'Fluid Ounce':128}\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters']\nconst lengthConver = [1, 1.60934, 1760, 1609.34, 5280, 63360, 160934]\nconst weight = ['Pounds', 'Kilograms', 'Milligrams', 'Ounces', 'Tons']\nconst weightConver = [1, 0.453592, 453592, 16, 0.0005]\n\nconst MainBox = () => {\n\n    const [currentUnit, setCurrentUnit] = useState()\n    const [currentList, setCurrentList] = useState(volume)\n    const [currentTo, setCurrentTo] = useState(volume[0])\n    const [currentFrom, setCurrentFrom] = useState(volume[0])\n    const [init, setInit] = useState()\n    const [result, setResult] = useState()\n\n    const onUnitChange = (e) => {\n        setCurrentUnit(e.target.value)   \n    }\n\n    //Unit change effect\n    useEffect(() => {\n        console.log(currentUnit)\n\n        if(currentUnit === 'Volume'){\n            setCurrentList(volume)\n            setCurrentFrom(volume[0])\n            setCurrentTo(volume[0])\n        }\n        else if(currentUnit === 'Length'){\n            setCurrentList(length)\n            setCurrentFrom(length[0])\n            setCurrentTo(length[0])\n        }\n        else if(currentUnit === 'Weight'){\n            setCurrentList(weight)\n            setCurrentFrom(weight[0])\n            setCurrentTo(weight[0])\n        }\n\n    }, [currentUnit])\n\n    const onFromChange = (e) => {\n        setCurrentFrom(e.target.value)\n    }\n    \n    const onToChange = (e) => {\n        setCurrentTo(e.target.value)\n    }\n\n    useEffect(()=>{\n        console.log(currentFrom)\n        console.log(currentTo)\n        console.log(volumeConver[To])\n    }, [currentFrom, currentTo])\n\n    const onInitChange = (e) => {\n        setInit(e.target.value)\n    }\n\n    useEffect(()=>{\n        console.log(init)\n    }, [init])\n\n    const onSubmit = async () => {\n        \n\n    }\n\n    useEffect(() => {\n        console.log(result)\n    }, [result])\n\n    return(\n        <div className='mainBox'>\n            <Dropdown id='unit' list={units} onChange = {onUnitChange}></Dropdown>\n            <Dropdown selected={currentFrom} list={currentList} onChange={onFromChange}></Dropdown>\n            <Dropdown selected={currentTo} list = {currentList} onChange={onToChange}></Dropdown>\n            <input type=\"number\" onChange={onInitChange}></input>\n            <button id='submit' onClick={onSubmit}>Convert</button>\n        </div>\n    )\n}\n\nexport default MainBox;"]},"metadata":{},"sourceType":"module"}