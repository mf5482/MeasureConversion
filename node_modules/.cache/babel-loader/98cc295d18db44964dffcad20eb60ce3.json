{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport ConversionPage from './ConversionPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst units = ['Volume', 'Length', 'Weight'];\nconst volume = ['Gallons', 'Liters', 'Quarts', 'Pints', 'Cups', 'Milliliters', 'Fluid Ounces'];\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters'];\nconst weight = ['Pounds', 'Kilograms', 'Milligrams', 'Ounces', 'Tons'];\nconst conver = {\n  'Gallons': 1,\n  'Liters': 3.78541,\n  'Quarts': 4,\n  'Pints': 8,\n  'Cups': 16,\n  'Milliliters': 3785.41,\n  'Fluid Ounces': 128,\n  'Pounds': 1,\n  'Kilograms': 0.453592,\n  'Milligrams': 453592,\n  'Ounces': 16,\n  'Tons': 0.0005,\n  'Miles': 1,\n  'Kilometers': 1.60934,\n  'Yards': 1760,\n  'Meters': 1609.34,\n  'Feet': 5280,\n  'Inches': 63360,\n  'Centimeters': 160934\n};\n\nconst MainBox = () => {\n  _s();\n\n  //Define states\n  const [currentUnit, setCurrentUnit] = useState(units[0]); //Volume, Length or Weight\n\n  const [currentList, setCurrentList] = useState(volume);\n  const [currentTo, setCurrentTo] = useState(volume[0]); //Initial Unit\n\n  const [currentFrom, setCurrentFrom] = useState(volume[0]); //Converted Unit\n\n  const [init, setInit] = useState(); //Initial num\n\n  const [result, setResult] = useState(); //Converted num\n\n  const onUnitChange = e => {\n    setCurrentUnit(e.target.value);\n  }; //Unit change effect\n\n\n  useEffect(() => {\n    if (currentUnit === 'Volume') {\n      setCurrentList(volume);\n      setCurrentFrom(volume[0]);\n      setCurrentTo(volume[0]);\n    } else if (currentUnit === 'Length') {\n      setCurrentList(length);\n      setCurrentFrom(length[0]);\n      setCurrentTo(length[0]);\n    } else if (currentUnit === 'Weight') {\n      setCurrentList(weight);\n      setCurrentFrom(weight[0]);\n      setCurrentTo(weight[0]);\n    }\n\n    setInit('');\n    setResult('');\n  }, [currentUnit]); //Change state on user change\n\n  const onFromChange = e => {\n    setCurrentFrom(e.target.value);\n  };\n\n  const onToChange = e => {\n    setCurrentTo(e.target.value);\n  };\n\n  const onInitChange = e => {\n    setInit(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //Conversion\n\n    var r = init / conver[currentFrom] * conver[currentTo];\n    r = Math.round(r * 1000) / 1000;\n    setResult(r);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Measurement Conversion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          id: \"unit\",\n          list: units,\n          onChange: onUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"conver\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sent\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    onChange: onInitChange,\n                    value: init\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                    selected: currentFrom,\n                    list: currentList,\n                    onChange: onFromChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"=\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sent\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    readonly: true,\n                    type: \"number\",\n                    value: result\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                    selected: currentTo,\n                    list: currentList,\n                    onChange: onToChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/c\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainBox, \"4akHgCdZeGF/r3TpKITBdnr1H1w=\");\n\n_c = MainBox;\nexport default MainBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBox\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js"],"names":["React","Dropdown","useState","useEffect","Form","Button","BrowserRouter","Route","Link","ConversionPage","units","volume","length","weight","conver","MainBox","currentUnit","setCurrentUnit","currentList","setCurrentList","currentTo","setCurrentTo","currentFrom","setCurrentFrom","init","setInit","result","setResult","onUnitChange","e","target","value","onFromChange","onToChange","onInitChange","onSubmit","preventDefault","r","Math","round"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Dropdown from './Dropdown'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport ConversionPage from './ConversionPage'\n\nconst units = ['Volume', 'Length', 'Weight']\nconst volume = ['Gallons', 'Liters', 'Quarts', 'Pints', 'Cups', 'Milliliters', 'Fluid Ounces']\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters']\nconst weight = ['Pounds', 'Kilograms', 'Milligrams', 'Ounces', 'Tons']\nconst conver = {'Gallons':1, 'Liters':3.78541, 'Quarts':4, 'Pints':8, 'Cups':16, 'Milliliters':3785.41, 'Fluid Ounces':128, \n'Pounds':1, 'Kilograms':0.453592, 'Milligrams': 453592, 'Ounces':16, 'Tons':0.0005, \n'Miles':1, 'Kilometers':1.60934, 'Yards':1760, 'Meters':1609.34, 'Feet':5280, 'Inches':63360, 'Centimeters':160934}\n\nconst MainBox = () => {\n\n    //Define states\n    const [currentUnit, setCurrentUnit] = useState(units[0])        //Volume, Length or Weight\n    const [currentList, setCurrentList] = useState(volume)          \n    const [currentTo, setCurrentTo] = useState(volume[0])           //Initial Unit\n    const [currentFrom, setCurrentFrom] = useState(volume[0])       //Converted Unit\n    const [init, setInit] = useState()                              //Initial num\n    const [result, setResult] = useState()                          //Converted num\n\n    const onUnitChange = (e) => {\n        setCurrentUnit(e.target.value)   \n    }\n\n    //Unit change effect\n    useEffect(() => {\n\n        if(currentUnit === 'Volume'){\n            setCurrentList(volume)\n            setCurrentFrom(volume[0])\n            setCurrentTo(volume[0])\n        }\n        else if(currentUnit === 'Length'){\n            setCurrentList(length)\n            setCurrentFrom(length[0])\n            setCurrentTo(length[0])\n        }\n        else if(currentUnit === 'Weight'){\n            setCurrentList(weight)\n            setCurrentFrom(weight[0])\n            setCurrentTo(weight[0])\n        }\n\n        setInit('')\n        setResult('')\n\n    }, [currentUnit])\n\n    //Change state on user change\n    const onFromChange = (e) => {\n        setCurrentFrom(e.target.value)\n    }\n    \n    const onToChange = (e) => {\n        setCurrentTo(e.target.value)\n    }\n\n    const onInitChange = (e) => {\n        setInit(e.target.value)\n    }\n\n    const onSubmit = (e) => {\n\n        e.preventDefault()\n\n        //Conversion\n        var r = ((init/conver[currentFrom]) * conver[currentTo])\n        r = Math.round(r * 1000) / 1000\n\n        setResult(r)\n\n        return false;\n\n    }\n\n    return(\n        <Form>\n            <Form.Group>\n                <div className='mainBox'>\n                    <h3>Measurement Conversion</h3>\n                    <Dropdown id='unit' list={units} onChange = {onUnitChange}></Dropdown>\n                    <BrowserRouter>\n                        <Route path='/' exact render={()=>(\n                            <>\n                                <div class='conver'>\n                                    <div className='sent'>\n                                        <input type=\"number\" onChange={onInitChange} value={init}></input>\n                                        <Dropdown selected={currentFrom} list={currentList} onChange={onFromChange}></Dropdown>\n                                    </div>\n                                    <h1>=</h1>\n                                    <div className='sent'>\n                                        <input readonly type=\"number\" value={result}></input>\n                                        <Dropdown selected={currentTo} list = {currentList} onChange={onToChange}></Dropdown>\n                                    </div>\n                                </div>\n                            \n                            </>\n                        )} />\n                        <Route path='/c' exact render={()=>(\n                            <p>Hello</p>\n                        )} />\n                    </BrowserRouter>\n                </div>\n            </Form.Group>\n        </Form>\n    )\n}\n\nexport default MainBox;"]},"metadata":{},"sourceType":"module"}