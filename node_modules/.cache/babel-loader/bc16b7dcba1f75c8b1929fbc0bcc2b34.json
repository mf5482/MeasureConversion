{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = ['Volume', 'Length', 'Temperature', 'Weight'];\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce'];\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters', 'Millimeters'];\nconst weight = ['Stone', 'Pounds', 'Kilograms', 'Milligrams', 'Grams', 'Ounces'];\nconst temperature = ['Fahrenheit', 'Celsius', 'Kelvin'];\n\nconst MainBox = () => {\n  _s();\n\n  const [currentUnit, setCurrentUnit] = useState();\n  const [currentList, setCurrentList] = useState(volume);\n  const [currentTo, setCurrentTo] = useState(volume[0]);\n  const [currentFrom, setCurrentFrom] = useState(volume[0]);\n\n  const onUnitChange = e => {\n    setCurrentUnit(e.target.value);\n  }; //Unit change effect\n\n\n  useEffect(() => {\n    console.log(currentUnit);\n\n    switch (currentUnit) {\n      case 'Volume':\n        return setCurrentList(volume);\n\n      case 'Length':\n        return setCurrentList(length);\n\n      case 'Temperature':\n        return setCurrentList(temperature);\n\n      case 'Weight':\n        return setCurrentList(weight);\n    }\n  }, [currentUnit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBox\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"unit\",\n      list: units,\n      onChange: onUnitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"to\",\n      list: currentList,\n      onChange: onToChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"from\",\n      list: currentList,\n      onChange: onFromChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainBox, \"4d2eaE57FW2FDuiiocfOOQA8ol8=\");\n\n_c = MainBox;\nexport default MainBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBox\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js"],"names":["React","Dropdown","useState","useEffect","units","volume","length","weight","temperature","MainBox","currentUnit","setCurrentUnit","currentList","setCurrentList","currentTo","setCurrentTo","currentFrom","setCurrentFrom","onUnitChange","e","target","value","console","log","onToChange","onFromChange"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,aAArB,EAAoC,QAApC,CAAd;AACA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,KAArC,EAA4C,YAA5C,EAA0D,aAA1D,CAAf;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C,MAA3C,EAAmD,QAAnD,EAA6D,aAA7D,EAA4E,aAA5E,CAAf;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,WAApB,EAAiC,YAAjC,EAA+C,OAA/C,EAAwD,QAAxD,CAAf;AACA,MAAMC,WAAW,GAAG,CAAC,YAAD,EAAe,SAAf,EAA0B,QAA1B,CAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACG,MAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACG,MAAM,CAAC,CAAD,CAAP,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAACG,MAAM,CAAC,CAAD,CAAP,CAA9C;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AACxBR,IAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD,CAPkB,CAWlB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAZ;;AAEA,YAAOA,WAAP;AACI,WAAK,QAAL;AACI,eAAOG,cAAc,CAACR,MAAD,CAArB;;AACJ,WAAK,QAAL;AACI,eAAOQ,cAAc,CAACP,MAAD,CAArB;;AACJ,WAAK,aAAL;AACI,eAAOO,cAAc,CAACL,WAAD,CAArB;;AACJ,WAAK,QAAL;AACI,eAAOK,cAAc,CAACN,MAAD,CAArB;AARR;AAWH,GAdQ,EAcN,CAACG,WAAD,CAdM,CAAT;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAEN,KAA1B;AAAiC,MAAA,QAAQ,EAAIc;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAIN,WAA1B;AAAuC,MAAA,QAAQ,EAAEY;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAEZ,WAA1B;AAAuC,MAAA,QAAQ,EAAEa;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArCD;;GAAMhB,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport Dropdown from './Dropdown'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\n\nconst units = ['Volume', 'Length', 'Temperature', 'Weight']\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce']\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters', 'Millimeters']\nconst weight = ['Stone', 'Pounds', 'Kilograms', 'Milligrams', 'Grams', 'Ounces']\nconst temperature = ['Fahrenheit', 'Celsius', 'Kelvin']\n\nconst MainBox = () => {\n\n    const [currentUnit, setCurrentUnit] = useState()\n    const [currentList, setCurrentList] = useState(volume)\n    const [currentTo, setCurrentTo] = useState(volume[0])\n    const [currentFrom, setCurrentFrom] = useState(volume[0])\n\n    const onUnitChange = (e) => {\n        setCurrentUnit(e.target.value)   \n    }\n\n    //Unit change effect\n    useEffect(() => {\n        console.log(currentUnit)\n\n        switch(currentUnit){\n            case 'Volume':\n                return setCurrentList(volume)\n            case 'Length':\n                return setCurrentList(length)\n            case 'Temperature':\n                return setCurrentList(temperature)\n            case 'Weight':\n                return setCurrentList(weight)\n        }\n\n    }, [currentUnit])\n    \n\n\n    return(\n        <div className='mainBox'>\n            <Dropdown id='unit' list={units} onChange = {onUnitChange}></Dropdown>\n            <Dropdown id='to' list = {currentList} onChange={onToChange}></Dropdown>\n            <Dropdown id='from' list={currentList} onChange={onFromChange}></Dropdown>\n        </div>\n    )\n}\n\nexport default MainBox;"]},"metadata":{},"sourceType":"module"}