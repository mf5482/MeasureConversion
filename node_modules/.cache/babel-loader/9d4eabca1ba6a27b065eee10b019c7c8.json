{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = ['Volume', 'Length', 'Weight'];\nconst volume = ['Gallons', 'Liters', 'Quarts', 'Pints', 'Cups', 'Milliliters', 'Fluid Ounces'];\nconst volumeConver = {\n  'Gallons': 1,\n  'Liters': 3.78541,\n  'Quarts': 4,\n  'Pints': 8,\n  'Cups': 16,\n  'Milliliters': 3785.41,\n  'Fluid Ounces': 128,\n  'Pounds': 1,\n  'Kilograms': 0.453592,\n  'Milligrams': 453592,\n  'Ounces': 16,\n  'Tons': 0.0005,\n  'Miles': 1,\n  'Kilometers': 1.60934,\n  'Yards': 1760,\n  'Meters': 1609.34,\n  'Feet': 5280,\n  'Inches': 63360,\n  'Centimeters': 160934\n};\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters'];\nconst weight = ['Pounds', 'Kilograms', 'Milligrams', 'Ounces', 'Tons'];\n\nconst MainBox = () => {\n  _s();\n\n  const [currentUnit, setCurrentUnit] = useState(units[0]);\n  const [currentList, setCurrentList] = useState(volume);\n  const [currentTo, setCurrentTo] = useState(volume[0]);\n  const [currentFrom, setCurrentFrom] = useState(volume[0]);\n  const [init, setInit] = useState();\n  const [result, setResult] = useState();\n\n  const onUnitChange = e => {\n    setCurrentUnit(e.target.value);\n  }; //Unit change effect\n\n\n  useEffect(() => {\n    console.log(currentUnit);\n\n    if (currentUnit === 'Volume') {\n      setCurrentList(volume);\n      setCurrentFrom(volume[0]);\n      setCurrentTo(volume[0]);\n    } else if (currentUnit === 'Length') {\n      setCurrentList(length);\n      setCurrentFrom(length[0]);\n      setCurrentTo(length[0]);\n    } else if (currentUnit === 'Weight') {\n      setCurrentList(weight);\n      setCurrentFrom(weight[0]);\n      setCurrentTo(weight[0]);\n    }\n  }, [currentUnit]);\n\n  const onFromChange = e => {\n    setCurrentFrom(e.target.value);\n  };\n\n  const onToChange = e => {\n    setCurrentTo(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(currentFrom);\n    console.log(currentTo);\n    console.log(volumeConver[currentTo]);\n  }, [currentFrom, currentTo]);\n\n  const onInitChange = e => {\n    setInit(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(init);\n  }, [init]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(currentUnit);\n    setResult((init / volumeConver[currentFrom] * volumeConver[currentTo]).toFixed(3));\n    return false;\n  };\n\n  useEffect(() => {\n    console.log(result);\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainBox\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          id: \"unit\",\n          list: units,\n          onChange: onUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"conver\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sent\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: onInitChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              selected: currentFrom,\n              list: currentList,\n              onChange: onFromChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"=\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sent\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              readonly: true,\n              type: \"number\",\n              value: result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              selected: currentTo,\n              list: currentList,\n              onChange: onToChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          id: \"submit\",\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainBox, \"UWUR5nVjNWTrg4SjfKKTcgmuoJs=\");\n\n_c = MainBox;\nexport default MainBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBox\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js"],"names":["React","Dropdown","useState","useEffect","Form","Button","units","volume","volumeConver","length","weight","MainBox","currentUnit","setCurrentUnit","currentList","setCurrentList","currentTo","setCurrentTo","currentFrom","setCurrentFrom","init","setInit","result","setResult","onUnitChange","e","target","value","console","log","onFromChange","onToChange","onInitChange","onSubmit","preventDefault","toFixed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Dropdown from './Dropdown'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst units = ['Volume', 'Length', 'Weight']\nconst volume = ['Gallons', 'Liters', 'Quarts', 'Pints', 'Cups', 'Milliliters', 'Fluid Ounces']\nconst volumeConver = {'Gallons':1, 'Liters':3.78541, 'Quarts':4, 'Pints':8, 'Cups':16, 'Milliliters':3785.41, 'Fluid Ounces':128, \n'Pounds':1, 'Kilograms':0.453592, 'Milligrams': 453592, 'Ounces':16, 'Tons':0.0005, \n'Miles':1, 'Kilometers':1.60934, 'Yards':1760, 'Meters':1609.34, 'Feet':5280, 'Inches':63360, 'Centimeters':160934}\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters']\nconst weight = ['Pounds', 'Kilograms', 'Milligrams', 'Ounces', 'Tons']\n\nconst MainBox = () => {\n\n    const [currentUnit, setCurrentUnit] = useState(units[0])\n    const [currentList, setCurrentList] = useState(volume)\n    const [currentTo, setCurrentTo] = useState(volume[0])\n    const [currentFrom, setCurrentFrom] = useState(volume[0])\n    const [init, setInit] = useState()\n    const [result, setResult] = useState()\n\n    const onUnitChange = (e) => {\n        setCurrentUnit(e.target.value)   \n    }\n\n    //Unit change effect\n    useEffect(() => {\n        console.log(currentUnit)\n\n        if(currentUnit === 'Volume'){\n            setCurrentList(volume)\n            setCurrentFrom(volume[0])\n            setCurrentTo(volume[0])\n        }\n        else if(currentUnit === 'Length'){\n            setCurrentList(length)\n            setCurrentFrom(length[0])\n            setCurrentTo(length[0])\n        }\n        else if(currentUnit === 'Weight'){\n            setCurrentList(weight)\n            setCurrentFrom(weight[0])\n            setCurrentTo(weight[0])\n        }\n\n    }, [currentUnit])\n\n    const onFromChange = (e) => {\n        setCurrentFrom(e.target.value)\n    }\n    \n    const onToChange = (e) => {\n        setCurrentTo(e.target.value)\n    }\n\n    useEffect(()=>{\n        console.log(currentFrom)\n        console.log(currentTo)\n        console.log(volumeConver[currentTo])\n    }, [currentFrom, currentTo])\n\n    const onInitChange = (e) => {\n        setInit(e.target.value)\n    }\n\n    useEffect(()=>{\n        console.log(init)\n    }, [init])\n\n    const onSubmit = (e) => {\n\n        e.preventDefault()\n\n        console.log(currentUnit)\n        setResult(((init/volumeConver[currentFrom]) * volumeConver[currentTo]).toFixed(3))\n        \n        return false;\n\n    }\n\n    useEffect(() => {\n        console.log(result)\n\n    }, [result])\n\n    return(\n        <Form>\n            <Form.Group>\n                <div className='mainBox'>\n                    <Dropdown id='unit' list={units} onChange = {onUnitChange}></Dropdown>\n                        <div class='conver'>\n                            <div className='sent'>\n                                <input type=\"number\" onChange={onInitChange}></input>\n                                <Dropdown selected={currentFrom} list={currentList} onChange={onFromChange}></Dropdown>\n                            </div>\n                            <h1>=</h1>\n                            <div className='sent'>\n                                <input readonly type=\"number\" value={result}></input>\n                                <Dropdown selected={currentTo} list = {currentList} onChange={onToChange}></Dropdown>\n                            </div>\n                        </div>\n                    <Button variant=\"primary\" id='submit' type='submit' onClick={onSubmit}>Convert</Button>\n                </div>\n            </Form.Group>\n        </Form>\n    )\n}\n\nexport default MainBox;"]},"metadata":{},"sourceType":"module"}