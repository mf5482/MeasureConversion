{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = ['Volume', 'Length', 'Temperature', 'Weight'];\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce'];\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters', 'Millimeters'];\nconst weight = ['Stone', 'Pounds', 'Kilograms', 'Milligrams', 'Grams', 'Ounces'];\nconst temperature = ['Fahrenheit', 'Celsius', 'Kelvin'];\n\nconst MainBox = () => {\n  _s();\n\n  const [currentUnit, setCurrentUnit] = useState();\n  const [currentTo, setCurrentTo] = useState(volume);\n  const [currentFrom, setCurrentFrom] = useState(volume);\n\n  const onUnitChange = e => {\n    setCurrentUnit(e.target.value);\n  }; //Unit change effect\n\n\n  useEffect(() => {\n    console.log(currentUnit);\n\n    if (currentUnit === 'Volume') {\n      setCurrentFrom(volume);\n      setCurrentTo(volume);\n    } else if (currentUnit === 'Length') {\n      setCurrentFrom(length);\n      setCurrentTo(length);\n    } else if (currentUnit === 'Temperature') {\n      setCurrentFrom(temperature);\n      setCurrentTo(temperature);\n    } else if (currentUnit === 'Weight') {\n      setCurrentFrom(weight);\n      setCurrentTo(weight);\n    }\n  }, [currentUnit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBox\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"unit\",\n      list: units,\n      onChange: onUnitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"to\",\n      list: currentTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainBox, \"ohVjG/1eYqi4mg/hDiIffkzBVAI=\");\n\n_c = MainBox;\nexport default MainBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBox\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js"],"names":["React","Dropdown","useState","useEffect","units","volume","length","weight","temperature","MainBox","currentUnit","setCurrentUnit","currentTo","setCurrentTo","currentFrom","setCurrentFrom","onUnitChange","e","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,aAArB,EAAoC,QAApC,CAAd;AACA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,KAArC,EAA4C,YAA5C,EAA0D,aAA1D,CAAf;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C,MAA3C,EAAmD,QAAnD,EAA6D,aAA7D,EAA4E,aAA5E,CAAf;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,WAApB,EAAiC,YAAjC,EAA+C,OAA/C,EAAwD,QAAxD,CAAf;AACA,MAAMC,WAAW,GAAG,CAAC,YAAD,EAAe,SAAf,EAA0B,QAA1B,CAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACG,MAAD,CAA1C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACG,MAAD,CAA9C;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AACxBN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD,CANkB,CAUlB;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;;AAEA,QAAGA,WAAW,KAAK,QAAnB,EAA4B;AACxBK,MAAAA,cAAc,CAACV,MAAD,CAAd;AACAQ,MAAAA,YAAY,CAACR,MAAD,CAAZ;AACH,KAHD,MAIK,IAAGK,WAAW,KAAK,QAAnB,EAA4B;AAC7BK,MAAAA,cAAc,CAACT,MAAD,CAAd;AACAO,MAAAA,YAAY,CAACP,MAAD,CAAZ;AACH,KAHI,MAIA,IAAII,WAAW,KAAK,aAApB,EAAkC;AACnCK,MAAAA,cAAc,CAACP,WAAD,CAAd;AACAK,MAAAA,YAAY,CAACL,WAAD,CAAZ;AACH,KAHI,MAIA,IAAIE,WAAW,KAAK,QAApB,EAA6B;AAC9BK,MAAAA,cAAc,CAACR,MAAD,CAAd;AACAM,MAAAA,YAAY,CAACN,MAAD,CAAZ;AACH;AAEJ,GApBQ,EAoBN,CAACG,WAAD,CApBM,CAAT;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAEN,KAA1B;AAAiC,MAAA,QAAQ,EAAIY;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAIJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAzCD;;GAAMH,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport Dropdown from './Dropdown'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\n\nconst units = ['Volume', 'Length', 'Temperature', 'Weight']\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce']\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters', 'Millimeters']\nconst weight = ['Stone', 'Pounds', 'Kilograms', 'Milligrams', 'Grams', 'Ounces']\nconst temperature = ['Fahrenheit', 'Celsius', 'Kelvin']\n\nconst MainBox = () => {\n\n    const [currentUnit, setCurrentUnit] = useState()\n    const [currentTo, setCurrentTo] = useState(volume)\n    const [currentFrom, setCurrentFrom] = useState(volume)\n\n    const onUnitChange = (e) => {\n        setCurrentUnit(e.target.value)   \n    }\n\n    //Unit change effect\n    useEffect(() => {\n        console.log(currentUnit)\n\n        if(currentUnit === 'Volume'){\n            setCurrentFrom(volume)\n            setCurrentTo(volume)\n        }\n        else if(currentUnit === 'Length'){\n            setCurrentFrom(length)\n            setCurrentTo(length)\n        }\n        else if (currentUnit === 'Temperature'){\n            setCurrentFrom(temperature)\n            setCurrentTo(temperature)\n        }\n        else if (currentUnit === 'Weight'){\n            setCurrentFrom(weight)\n            setCurrentTo(weight)\n        }\n\n    }, [currentUnit])\n    \n\n\n    return(\n        <div className='mainBox'>\n            <Dropdown id='unit' list={units} onChange = {onUnitChange}></Dropdown>\n            <Dropdown id='to' list = {currentTo}></Dropdown>\n        </div>\n    )\n}\n\nexport default MainBox;"]},"metadata":{},"sourceType":"module"}