{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst units = ['Volume', 'Length', 'Temperature', 'Weight'];\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce'];\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters', 'Millimeters'];\nconst weight = ['Stone', 'Pounds', 'Kilograms', 'Milligrams', 'Grams', 'Ounces'];\nconst temperature = ['Fahrenheit', 'Celsius', 'Kelvin'];\n\nconst MainBox = () => {\n  _s();\n\n  const [currentUnit, setCurrentUnit] = useState();\n  const [currentList, setCurrentList] = useState(volume);\n  const [currentTo, setCurrentTo] = useState(volume[0]);\n  const [currentFrom, setCurrentFrom] = useState(volume[0]);\n  const [currentInit, setCurrentInit] = useState();\n\n  const onUnitChange = e => {\n    setCurrentUnit(e.target.value);\n  }; //Unit change effect\n\n\n  useEffect(() => {\n    console.log(currentUnit);\n\n    if (currentUnit === 'Volume') {\n      setCurrentList(volume);\n      setCurrentFrom(volume[0]);\n      setCurrentTo(volume[0]);\n    } else if (currentUnit === 'Length') {\n      setCurrentList(length);\n      setCurrentFrom(length[0]);\n      setCurrentTo(length[0]);\n    } else if (currentUnit === 'Temperature') {\n      setCurrentList(temperature);\n      setCurrentFrom(temperature[0]);\n      setCurrentTo(temperature[0]);\n    } else if (currentUnit === 'Weight') {\n      setCurrentList(weight);\n      setCurrentFrom(weight[0]);\n      setCurrentTo(weight[0]);\n    }\n  }, [currentUnit]);\n\n  const onFromChange = e => {\n    setCurrentFrom(e.target.value);\n  };\n\n  const onToChange = e => {\n    setCurrentTo(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(currentFrom);\n    console.log(currentTo);\n  }, [currentFrom, currentTo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBox\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      id: \"unit\",\n      list: units,\n      onChange: onUnitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      selected: currentFrom,\n      list: currentList,\n      onChange: onFromChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      selected: currentTo,\n      list: currentList,\n      onChange: onToChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: on\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainBox, \"FV/wIWHaOusgtKl1jMEz2ZcQr0A=\");\n\n_c = MainBox;\nexport default MainBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainBox\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/MainBox.js"],"names":["React","Dropdown","useState","useEffect","units","volume","length","weight","temperature","MainBox","currentUnit","setCurrentUnit","currentList","setCurrentList","currentTo","setCurrentTo","currentFrom","setCurrentFrom","currentInit","setCurrentInit","onUnitChange","e","target","value","console","log","onFromChange","onToChange","on"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Dropdown from './Dropdown'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\n\nconst units = ['Volume', 'Length', 'Temperature', 'Weight']\nconst volume = ['Gallon', 'Liter', 'Quart', 'Pint', 'Cup', 'Milliliter', 'Fluid Ounce']\nconst length = ['Miles', 'Kilometers', 'Yards', 'Meters', 'Feet', 'Inches', 'Centimeters', 'Millimeters']\nconst weight = ['Stone', 'Pounds', 'Kilograms', 'Milligrams', 'Grams', 'Ounces']\nconst temperature = ['Fahrenheit', 'Celsius', 'Kelvin']\n\nconst MainBox = () => {\n\n    const [currentUnit, setCurrentUnit] = useState()\n    const [currentList, setCurrentList] = useState(volume)\n    const [currentTo, setCurrentTo] = useState(volume[0])\n    const [currentFrom, setCurrentFrom] = useState(volume[0])\n    const [currentInit, setCurrentInit] = useState()\n\n    const onUnitChange = (e) => {\n        setCurrentUnit(e.target.value)   \n    }\n\n    //Unit change effect\n    useEffect(() => {\n        console.log(currentUnit)\n\n        if(currentUnit === 'Volume'){\n            setCurrentList(volume)\n            setCurrentFrom(volume[0])\n            setCurrentTo(volume[0])\n        }\n        else if(currentUnit === 'Length'){\n            setCurrentList(length)\n            setCurrentFrom(length[0])\n            setCurrentTo(length[0])\n        }\n        else if(currentUnit === 'Temperature'){\n            setCurrentList(temperature)\n            setCurrentFrom(temperature[0])\n            setCurrentTo(temperature[0])\n        }\n        else if(currentUnit === 'Weight'){\n            setCurrentList(weight)\n            setCurrentFrom(weight[0])\n            setCurrentTo(weight[0])\n        }\n\n    }, [currentUnit])\n\n    const onFromChange = (e) => {\n        setCurrentFrom(e.target.value)\n    }\n    \n    const onToChange = (e) => {\n        setCurrentTo(e.target.value)\n    }\n\n    useEffect(()=>{\n        console.log(currentFrom)\n        console.log(currentTo)\n    }, [currentFrom, currentTo])\n\n    return(\n        <div className='mainBox'>\n            <Dropdown id='unit' list={units} onChange = {onUnitChange}></Dropdown>\n            <Dropdown selected={currentFrom} list={currentList} onChange={onFromChange}></Dropdown>\n            <Dropdown selected={currentTo} list = {currentList} onChange={onToChange}></Dropdown>\n            <input type=\"number\" onChange={on}></input>\n        </div>\n    )\n}\n\nexport default MainBox;"]},"metadata":{},"sourceType":"module"}