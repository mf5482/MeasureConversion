{"ast":null,"code":"var _jsxFileName = \"/Users/Mike/Documents/Measure/measure/src/Components/ConversionPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Table from 'react-bootstrap/table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vol = ['1 Gallon = 4 Quarts', '1 Gallon = 3.785 Liters', '1 Quart = 4 cups', '1 cup = 8 Fluid Ounces'];\nconst len = ['1 Mile = 1.609 Kilometers', '1 mile = 1760 Yards', '1 Yard = 3 Feet', '1 Foot = 12 Inches'];\nconst wei = ['1 Pound = 16 Ounces', '1 Kilometer = 2.205 Pounds', '1 Ton = 2000 Pounds'];\n\nconst ConversionPage = props => {\n  _s();\n\n  const [currentList, setCurrentList] = useState(wei);\n  useEffect(() => {\n    if (props.currentUnit === 'Volume') {\n      setCurrentList(volume);\n    } else if (props.currentUnit === 'Length') {} else if (props.currentUnit === 'Weight') {}\n  }, [props.currentUnit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"conver\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConversionPage, \"FVH6yhS38AcW4HAXBvS/BuwfGhA=\");\n\n_c = ConversionPage;\nexport default ConversionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversionPage\");","map":{"version":3,"sources":["/Users/Mike/Documents/Measure/measure/src/Components/ConversionPage.js"],"names":["React","useEffect","useState","Table","vol","len","wei","ConversionPage","props","currentList","setCurrentList","currentUnit","volume","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,GAAG,GAAG,CAAC,qBAAD,EAAwB,yBAAxB,EAAmD,kBAAnD,EAAuE,wBAAvE,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,2BAAD,EAA8B,qBAA9B,EAAqD,iBAArD,EAAwE,oBAAxE,CAAZ;AACA,MAAMC,GAAG,GAAG,CAAC,qBAAD,EAAwB,4BAAxB,EAAsD,qBAAtD,CAAZ;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACI,GAAD,CAA9C;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGO,KAAK,CAACG,WAAN,KAAsB,QAAzB,EAAkC;AAC9BD,MAAAA,cAAc,CAACE,MAAD,CAAd;AAEH,KAHD,MAIK,IAAGJ,KAAK,CAACG,WAAN,KAAsB,QAAzB,EAAkC,CAEtC,CAFI,MAGA,IAAGH,KAAK,CAACG,WAAN,KAAsB,QAAzB,EAAkC,CAEtC;AACJ,GAXQ,EAWN,CAACH,KAAK,CAACG,WAAP,CAXM,CAAT;AAaA,sBACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAA,6BACI;AAAA,kBAESF,WAAW,CAACI,GAAZ,CAAiBC,IAAD,IAAS;AACtB,8BACI;AAAA,mCACI;AAAI,cAAA,KAAK,EAAC,QAAV;AAAA,wBAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAIF,SALD;AAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhCD;;GAAMP,c;;KAAAA,c;AAkCN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport Table from 'react-bootstrap/table'\n\nconst vol = ['1 Gallon = 4 Quarts', '1 Gallon = 3.785 Liters', '1 Quart = 4 cups', '1 cup = 8 Fluid Ounces']\nconst len = ['1 Mile = 1.609 Kilometers', '1 mile = 1760 Yards', '1 Yard = 3 Feet', '1 Foot = 12 Inches']\nconst wei = ['1 Pound = 16 Ounces', '1 Kilometer = 2.205 Pounds', '1 Ton = 2000 Pounds']\n\nconst ConversionPage = (props) => {\n\n    const [currentList, setCurrentList] = useState(wei) \n\n    useEffect(()=>{\n        if(props.currentUnit === 'Volume'){\n            setCurrentList(volume)\n            \n        }\n        else if(props.currentUnit === 'Length'){\n            \n        }\n        else if(props.currentUnit === 'Weight'){\n           \n        }\n    }, [props.currentUnit])\n\n    return(\n        <div class='conver'>\n            <Table striped>\n                <tbody>\n                        \n                        {currentList.map((item) =>{\n                            return(\n                                <tr>\n                                    <td align='center'>{item}</td>\n                                </tr>\n                        )})}  \n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ConversionPage;"]},"metadata":{},"sourceType":"module"}